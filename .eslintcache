[{"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/TickerTape/index.js":"1","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/NimZap/index.js":"2","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/TickerTape/makeData.js":"3","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/move.js":"4","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/GameBoard/index.js":"5","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/index.js":"6","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/gamePlay.js":"7","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/reportWebVitals.js":"8","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/CoinHeap/index.js":"9","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/GameSetup/index.js":"10","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/App.js":"11","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/gameState.js":"12"},{"size":7233,"mtime":1608091646134,"results":"13","hashOfConfig":"14"},{"size":1029,"mtime":1608156084953,"results":"15","hashOfConfig":"14"},{"size":1032,"mtime":1607886794211,"results":"16","hashOfConfig":"14"},{"size":816,"mtime":1608343716681,"results":"17","hashOfConfig":"14"},{"size":3732,"mtime":1608432339616,"results":"18","hashOfConfig":"14"},{"size":500,"mtime":1607648769054,"results":"19","hashOfConfig":"14"},{"size":3368,"mtime":1608432090438,"results":"20","hashOfConfig":"14"},{"size":362,"mtime":1607648769055,"results":"21","hashOfConfig":"14"},{"size":2060,"mtime":1608448574401,"results":"22","hashOfConfig":"14"},{"size":6418,"mtime":1608418653717,"results":"23","hashOfConfig":"14"},{"size":253,"mtime":1607759104639,"results":"24","hashOfConfig":"14"},{"size":2335,"mtime":1608430636285,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"9026n7",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/TickerTape/index.js",["54"],"/**\n * Created by J.Vidya Sagar on 12/11/20.\n */\n\n// import React from 'react'\n//\n// import './style.scss'\n//\n// const CoinRow = ({name, coinCount}) => {\n//     const choiceNums = [...Array(coinCount).keys()].map(n => n + 1)\n//\n//     return (\n//         <>\n//             <ul className={'coinList'}>\n//             {\n//                 choiceNums.map((cnum, index) =>\n//                         <li key={cnum} className={'coinListItem'}>\n//                             {' '}\n//                         </li>\n//                 )\n//             }\n//             </ul>\n//         </>\n//     );\n// }\n//\n// const KeyPad = ({name, coinCount, updateCoinCounts}) => {\n//     const choiceNums = [...Array(coinCount).keys()].map(n => n + 1)\n//\n//     const choiceNumClick = e => {\n//         console.log(`choiceNumClick(): e: ${e}`)\n//         const cNum = parseInt(e.target.dataset.choice)\n//\n//         const letMap = {\n//             'A': 0,\n//             'B': 1,\n//             'C': 2,\n//             'D': 3,\n//             'E': 4\n//         }\n//\n//         updateCoinCounts(letMap[name], cNum)\n//         console.log(`chosen: heap-count = ${name}-${cNum}`)\n//     }\n//\n//     return (\n//         <>\n//             <ul className={'choiceNumList'}>\n//             {\n//                 choiceNums.map((cnum, index) =>\n//                         <li key={cnum} className={'choiceNumItem'} onClick={choiceNumClick}  data-choice={cnum}>\n//                             {cnum}\n//                         </li>\n//                 )\n//             }\n//         </ul>\n//         </>\n//     );\n// }\n//\n// export default function TickerTape({name, coinCount, updateCoinCounts}) {\n//     console.log(\"TickerTape: start\")\n//\n//     return (\n//         <div className={'movesRecordContainer'}>\n//             <div className={'xyz'}>\n//                 <h4 className={'xyz'}> Moves Record</h4>\n//                 {/*<h4 className={'heapName'}>{name}</h4>*/}\n//                 {/*<CoinRow name={name} coinCount={coinCount}/>*/}\n//                 {/*<KeyPad name={name}  coinCount={coinCount} updateCoinCounts={updateCoinCounts}/>*/}\n//             </div>\n//         </div>\n//     );\n// }\n\n\n\nimport React from 'react'\nimport styled from 'styled-components'\nimport { useTable } from 'react-table'\n\nimport makeData from './makeData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tbody tr:nth-child(odd) {\n       // background-color: #ccc;\n       background-color: #e6ffe6;\n    }\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`\n\nfunction Table({ columns, data }) {\n    // Use the state and functions returned from useTable to build your UI\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n    } = useTable({\n        columns,\n        data,\n    })\n\n    // Render the UI for your table\n    return (\n        <table {...getTableProps()}>\n            <thead>\n            {headerGroups.map(headerGroup => (\n                <tr {...headerGroup.getHeaderGroupProps()}>\n                    {headerGroup.headers.map(column => (\n                        <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                    ))}\n                </tr>\n            ))}\n            </thead>\n            <tbody {...getTableBodyProps()}>\n            {rows.map((row, i) => {\n                prepareRow(row)\n                return (\n                    <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                    </tr>\n                )\n            })}\n            </tbody>\n        </table>\n    )\n}\n\nfunction TickerTape({movesLog}) {\n    // const columns = React.useMemo(\n    //     () => [\n    //         {\n    //             Header: 'Name',\n    //             columns: [\n    //                 {\n    //                     Header: 'First Name',\n    //                     accessor: 'firstName',\n    //                 },\n    //                 {\n    //                     Header: 'Last Name',\n    //                     accessor: 'lastName',\n    //                 },\n    //             ],\n    //         },\n    //         {\n    //             Header: 'Info',\n    //             columns: [\n    //                 {\n    //                     Header: 'Age',\n    //                     accessor: 'age',\n    //                 },\n    //                 {\n    //                     Header: 'Visits',\n    //                     accessor: 'visits',\n    //                 },\n    //                 {\n    //                     Header: 'Status',\n    //                     accessor: 'status',\n    //                 },\n    //                 {\n    //                     Header: 'Profile Progress',\n    //                     accessor: 'progress',\n    //                 },\n    //             ],\n    //         },\n    //     ],\n    //     []\n    // )\n\n    const columns = React.useMemo(\n        () => [\n            {\n                Header: 'Move #',\n                accessor: 'Move #',\n            },\n            {\n                Header: 'Made by',\n                accessor: 'Made by',\n\n            },\n            {\n                Header: 'Before',\n                accessor: 'Before',\n            },\n            {\n                Header: 'Move',\n                accessor: 'Move',\n            },\n            {\n                Header: 'After',\n                accessor: 'After',\n            },\n            //\n            //\n            // {\n            //     Header: 'Name',\n            //     columns: [\n            //         {\n            //             Header: 'First Name',\n            //             accessor: 'firstName',\n            //         },\n            //         {\n            //             Header: 'Last Name',\n            //             accessor: 'lastName',\n            //         },\n            //     ],\n            // },\n            // {\n            //     Header: 'Info',\n            //     columns: [\n            //         {\n            //             Header: 'Age',\n            //             accessor: 'age',\n            //         },\n            //         {\n            //             Header: 'Visits',\n            //             accessor: 'visits',\n            //         },\n            //         {\n            //             Header: 'Status',\n            //             accessor: 'status',\n            //         },\n            //         {\n            //             Header: 'Profile Progress',\n            //             accessor: 'progress',\n            //         },\n            //     ],\n            // },\n        ],\n        []\n    )\n\n    // const data = React.useMemo(() => makeData(20), [])\n    const data = React.useMemo(() => movesLog, [movesLog])\n\n    return (\n        <Styles>\n            <Table columns={columns} data={data} />\n        </Styles>\n    )\n}\n\nexport default TickerTape\n","/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/NimZap/index.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/TickerTape/makeData.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/move.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/GameBoard/index.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/index.js",[],["55","56"],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/gamePlay.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/reportWebVitals.js",[],["57","58"],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/CoinHeap/index.js",["59"],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/GameSetup/index.js",[],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/App.js",[],["60","61"],"/Users/vidya/Documents/Project/ProjectApp/App/NimZap/react_spa/src/components/Backend/gameState.js",["62"],{"ruleId":"63","severity":1,"message":"64","line":82,"column":8,"nodeType":"65","messageId":"66","endLine":82,"endColumn":16},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"67","replacedBy":"71"},{"ruleId":"69","replacedBy":"72"},{"ruleId":"63","severity":1,"message":"73","line":9,"column":7,"nodeType":"65","messageId":"66","endLine":9,"endColumn":14},{"ruleId":"67","replacedBy":"74"},{"ruleId":"69","replacedBy":"75"},{"ruleId":"63","severity":1,"message":"76","line":1,"column":9,"nodeType":"65","messageId":"66","endLine":1,"endColumn":17},"no-unused-vars","'makeData' is defined but never used.","Identifier","unusedVar","no-native-reassign",["77"],"no-negated-in-lhs",["78"],["77"],["78"],"'CoinRow' is assigned a value but never used.",["77"],["78"],"'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]